//
//  CharacterListInteractor.swift
//  RickAndMorty
//
//  Created by  Oleksandra on 07.04.2025.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CharacterListBusinessLogic: AnyObject {
    func fetchCharacters(request: CharacterList.FetchCharacters.Request)
}

protocol CharacterListDataStore {
    var selectedCharacter: Character? { get set }
}

class CharacterListInteractor: CharacterListBusinessLogic {
    
    var presenter: CharacterListPresentationLogic?
    var worker: CharacterListWorker?
    private var characters: [Character] = []
    
    init(networkService: NetworkServiceProtocol, persistenceService: CharacterPersistenceService) {
        worker = CharacterListWorker(networkService: networkService,
                                     persistenceService: persistenceService)
    }

    func fetchCharacters(request: CharacterList.FetchCharacters.Request) {
        worker?.fetchCharacters(page: request.page) { [weak self] result in
            switch result {
            case .success(let response):
                self?.presenter?.presentCharacters(response: CharacterList.FetchCharacters.Response(
                    characters: response,
                    error: nil
                ))
            case .failure(let error):
                self?.presenter?.presentCharacters(response: CharacterList.FetchCharacters.Response(
                    characters: [],
                    error: error
                ))
            }
        }
    }
}
