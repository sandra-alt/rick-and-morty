//
//  CharacterListWorker.swift
//  RickAndMorty
//
//  Created by  Oleksandra on 07.04.2025.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation
import CoreData

final class CharacterWorker {
    
    var networkService: NetworkServiceProtocol
    
    init(networkService: NetworkServiceProtocol) {
        self.networkService = networkService
    }
    
    func fetchCharacters(page: Int, completion: @escaping (Result<[Character], Error>) -> Void) {
        networkService.fetchCharacters(page: page) { result in
            switch result {
            case .success(let response):
                completion(.success(response.results))
            case .failure(let error):
                completion(.failure(error))
            }
        }
    }
}

class CharacterListWorker {
    private let repository: CharacterRepositoryProtocol
    
    init(networkService: NetworkServiceProtocol, persistenceService: CharacterPersistenceService) {
        self.repository = CharacterRepository(networkService: networkService,
                                              persistenceService: persistenceService)
    }
    
    init(repository: CharacterRepositoryProtocol) {
        self.repository = repository
    }
    
    func fetchCharacters(page: Int, completion: @escaping (Result<[Character], Error>) -> Void) {
        repository.getCharactersList(page: page) { result in
            switch result {
            case .success(let characters):
                completion(.success(characters.results))
            case .failure(let error):
                completion(.failure(error))
            }
        }
    }
}
